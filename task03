 Project Structure

/ecommerce-platform
   /css
       styles.css
   /js
       app.js
   index.html


---

2. HTML (index.html)

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Local Store - E-Commerce</title>
    <link rel="stylesheet" href="css/styles.css">
</head>
<body>
    <header>
        <h1>Welcome to Local Store</h1>
        <div id="cart">
            <a href="#" id="cart-btn">Cart (<span id="cart-count">0</span>)</a>
        </div>
    </header>

    <main>
        <section id="products">
            <h2>Available Products</h2>
            <div class="product-list">
                <!-- Products will be dynamically inserted here -->
            </div>
        </section>

        <section id="cart-section" class="hidden">
            <h2>Your Shopping Cart</h2>
            <div id="cart-items">
                <!-- Cart items will be displayed here -->
            </div>
            <button id="checkout-btn">Checkout</button>
        </section>
    </main>

    <footer>
        <p>Â© 2024 Local Store</p>
    </footer>

    <script src="js/app.js"></script>
</body>
</html>


---

3. CSS (styles.css)

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    color: #333;
}

header {
    background-color: #333;
    color: #fff;
    padding: 10px 0;
    text-align: center;
    position: sticky;
    top: 0;
}

#cart {
    position: absolute;
    top: 10px;
    right: 20px;
}

#cart a {
    color: #fff;
    text-decoration: none;
}

h1, h2 {
    margin: 20px;
}

.product-list {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
}

.product {
    background-color: #fff;
    padding: 20px;
    border: 1px solid #ccc;
    width: 250px;
    margin: 10px;
    text-align: center;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.product img {
    width: 100px;
    height: 100px;
}

.product h3 {
    margin-bottom: 10px;
}

.product p {
    margin-bottom: 10px;
}

button {
    padding: 10px 20px;
    background-color: #333;
    color: #fff;
    border: none;
    cursor: pointer;
}

button:hover {
    background-color: #555;
}

#cart-section {
    margin-top: 40px;
}

.hidden {
    display: none;
}

footer {
    text-align: center;
    padding: 20px 0;
    background-color: #333;
    color: #fff;
    margin-top: 40px;
}


---

4. JavaScript (app.js)

// Sample products data
const products = [
    { id: 1, name: "Product 1", price: 50, img: "https://via.placeholder.com/100" },
    { id: 2, name: "Product 2", price: 75, img: "https://via.placeholder.com/100" },
    { id: 3, name: "Product 3", price: 100, img: "https://via.placeholder.com/100" }
];

const cart = JSON.parse(localStorage.getItem('cart')) || [];

// Initialize product listing
const productContainer = document.querySelector('.product-list');
const cartCount = document.getElementById('cart-count');
const cartSection = document.getElementById('cart-section');
const cartItems = document.getElementById('cart-items');

function updateCartCount() {
    cartCount.innerText = cart.length;
}

function renderProducts() {
    productContainer.innerHTML = '';
    products.forEach(product => {
        const productHTML = `
            <div class="product">
                <img src="${product.img}" alt="${product.name}">
                <h3>${product.name}</h3>
                <p>Price: $${product.price}</p>
                <button onclick="addToCart(${product.id})">Add to Cart</button>
            </div>
        `;
        productContainer.innerHTML += productHTML;
    });
}

function addToCart(id) {
    const product = products.find(p => p.id === id);
    cart.push(product);
    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartCount();
    alert(${product.name} has been added to the cart!);
}

function renderCart() {
    cartItems.innerHTML = '';
    cart.forEach((item, index) => {
        const cartItemHTML = `
            <div class="cart-item">
                <p>${item.name} - $${item.price} <button onclick="removeFromCart(${index})">Remove</button></p>
            </div>
        `;
        cartItems.innerHTML += cartItemHTML;
    });

    if (cart.length === 0) {
        cartItems.innerHTML = '<p>Your cart is empty.</p>';
    }
}

function removeFromCart(index) {
    cart.splice(index, 1);
    localStorage.setItem('cart', JSON.stringify(cart));
    renderCart();
    updateCartCount();
}

// Toggle cart visibility
document.getElementById('cart-btn').addEventListener('click', (e) => {
    e.preventDefault();
    cartSection.classList.toggle('hidden');
    renderCart();
});

document.getElementById('checkout-btn').addEventListener('click', () => {
    if (cart.length > 0) {
        alert('Checkout successful!');
        cart.length = 0; // Clear cart
        localStorage.removeItem('cart');
        renderCart();
        updateCartCount();
    } else {
        alert('Your cart is empty.');
    }
});

// Initial setup
renderProducts();
updateCartCount();
